Starting...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
Starting application...
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> main.main.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] HEAD   /fm/v1/download/*filepath --> gopkg.in/gin-gonic/gin%2ev1.(*RouterGroup).createStaticHandler.func1 (3 handlers)
[GIN-debug] GET    /fm/v1/files              --> github.com/ndphu/rpi-filemanager-golang/handler.V1.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on 0.0.0.0:80
